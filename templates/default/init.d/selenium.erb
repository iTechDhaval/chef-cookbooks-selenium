#!/bin/bash
#
# selenium
#
# chkconfig: 345 90 25
# description: Selenium server

if [[ -f /lib/lsb/init-functions ]]; then
  . /lib/lsb/init-functions
elif [[ -f /etc/init.d/functions ]]; then
  . /etc/init.d/functions
  # Pretend to be LSB-compliant
  function start_daemon() {
    daemon $*
  }
else
  echo "Linux LSB init function script or Redhat /etc/init.d/functions is required for this script."
  echo "See http://refspecs.linuxfoundation.org/LSB_4.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptfunc.html"
  exit 1
fi

java="/usr/bin/java"
selenium="<%=node[:selenium][:prog_path]%>"
lockfile="/var/lock/selenium"
pidfile="/var/run/selenium.pid"
logfile="/var/log/selenium.log"
prog="selenium-server"

port="<%=node[:selenium][:port]%>"

RETVAL=0

start() {
    echo -n $"Starting $prog: "
    export DISPLAY=":99"
    $java -jar $selenium -port $port <%=node[:selenium][:options]%> >> $logfile 2>&1 &
    RETVAL=$?
    pid=$!
    echo $pid > $pidfile

    listen=0
    while [ $listen -eq 0 ];
    do
      listen=`netstat -ltn | awk '{print $4}' | grep "${port}$" | wc -l`
      sleep 1
    done

    [ $RETVAL -eq 0 ] && echo_success || echo_failure

    echo
    [ $RETVAL -eq 0 ] && touch $lockfile
    return $RETVAL
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $pidfile $prog
    RETVAL=$?

    [ $RETVAL -eq 0 ] && echo_success || echo_failure

    echo
    [ $RETVAL -eq 0 ] && rm -f $lockfile $pidfile
    return $RETVAL
}

restart() {
    stop
    start
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p ${pidfile} ${prog}
        RETVAL=$?
        ;;
    restart)
        restart
        ;;
  *)
  echo $"Usage: $0 {start|stop|restart}"
  exit 1
esac
