#!/bin/bash
#
# Xvfb
#
# chkconfig: - 90 30
# description: Xvfb

if [[ -f /lib/lsb/init-functions ]]; then
  . /lib/lsb/init-functions
elif [[ -f /etc/init.d/functions ]]; then
  . /etc/init.d/functions
  # Pretend to be LSB-compliant
  function start_daemon() {
    daemon $*
  }
else
  echo "Linux LSB init function script or Redhat /etc/init.d/functions is required for this script."
  echo "See http://refspecs.linuxfoundation.org/LSB_4.1.0/LSB-Core-generic/LSB-Core-generic/iniscrptfunc.html"
  exit 1
fi

lockfile="/var/lock/xvfb"
pidfile="/var/run/xvfb.pid"
logfile="/var/log/xvfb.log"
prog="Xvfb"

XVFB="/usr/bin/Xvfb +extension RANDR"
STATUS=":99 -screen 0 1024x768x8"

RETVAL=0

start() {
    echo -n $"Starting $prog: "
    $XVFB $STATUS >> $logfile 2>&1 &
    RETVAL=$?
    pid=$!
    echo $pid > $pidfile

    [ $RETVAL -eq 0 ] && echo_success || echo_failure

    echo
    [ $RETVAL -eq 0 ] && touch $lockfile
    return $RETVAL
}

stop() {
    echo -n $"Stopping $prog: "
    killproc -p $pidfile $prog
    RETVAL=$?

    [ $RETVAL -eq 0 ] && echo_success || echo_failure

    echo
    [ $RETVAL -eq 0 ] && rm -f $lockfile $pidfile
    return $RETVAL
}

restart() {
    stop
    start
}


case "$1" in
    start)
        start
        ;;
    stop)
        stop
        ;;
    status)
        status -p ${pidfile} ${prog}
        RETVAL=$?
        ;;
    restart)
        restart
        ;;
  *)
  echo $"Usage: $0 {start|stop|restart}"
  exit 1
esac
